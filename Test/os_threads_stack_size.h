#ifndef _KEIL_RTX_STACK_SIZE_H
#define _KEIL_RTX_STACK_SIZE_H

/// @brief Generated by KeilRtxStackSize v1.0.0
///
/// This solution can't trace:
/// - function pointer
/// - recursive functions
///
/// Stack oversizing is user demaned
/// For example:
///     static const osThreadAttr_t Generic_Thread_Attributes = { .priority = osPriorityNormal, .stack_size = (GENERIC_TASK_STACK_SIZE + 100) };
///     to add 100 extra bytes to manage recursion or function pointer

#if defined(STM32G0)
#define SYSTEM_ARCHITECTURE_STACK_USAGE                                  (64)
#elif defined(STM32F1)
#define SYSTEM_ARCHITECTURE_STACK_USAGE                                  (0)
#elif defined(STM32F4)
#define SYSTEM_ARCHITECTURE_STACK_USAGE                                  (128)
#else
#error Unable to recognise architecture: contact Alessandro Barbieri and ask an improvement!
#define SYSTEM_ARCHITECTURE_STACK_USAGE                                  (0)
#endif

/******************************************************************************/

// ird_net_master_task => read_extended_status => user_eq_ird_net_crc => user_eq_helpers_get_crc => user_eq_helpers_get => flash_disk_read_field => __handle_error => ampli_error (Cycle)
#define IRD_NET_MASTER_TASK_STACK_SIZE                                   (SYSTEM_ARCHITECTURE_STACK_USAGE + 1600)

// accelerometer_task => mma8653_read_data => i2c_device_memory_read => HAL_I2C_Mem_Read_DMA => I2C_RequestMemoryRead => I2C_WaitOnMasterAddressFlagUntilTimeout => HAL_GetTick
#define ACCELEROMETER_TASK_STACK_SIZE                                    (SYSTEM_ARCHITECTURE_STACK_USAGE + 576)

// adc12_task => HAL_ADC_Start_DMA => HAL_DMA_Start_IT => DMA_SetConfig
#define ADC12_TASK_STACK_SIZE                                            (SYSTEM_ARCHITECTURE_STACK_USAGE + 384)

// ampli_protocol_digipro_task => init_connection => import_log_session => read => i2c_ampli_memory_read => i2c_stop => set_sda_as_out => HAL_GPIO_Init
#define AMPLI_PROTOCOL_DIGIPRO_TASK_STACK_SIZE                           (SYSTEM_ARCHITECTURE_STACK_USAGE + 704)

// dsp_task => read_data => adau145x_read_block => read_data => spi_device_rx => HAL_SPI_Receive_DMA => HAL_SPI_TransmitReceive_DMA => HAL_DMA_Start_IT => DMA_SetConfig
#define DSP_TASK_STACK_SIZE                                              (SYSTEM_ARCHITECTURE_STACK_USAGE + 512)

// encoder_task => __handle_error => ampli_error (Cycle)
#define ENCODER_TASK_STACK_SIZE                                          (SYSTEM_ARCHITECTURE_STACK_USAGE + 320)

// flash_disk_task => write_sector => flash_archive_write => ext_flash_program => write_disable => send_byte
#define FLASH_DISK_TASK_STACK_SIZE                                       (SYSTEM_ARCHITECTURE_STACK_USAGE + 448)

// flash_led_driver_task => set_torch => lm2759_write_torch_current_register => i2c_device_memory_write => _trace_log_append => log_append => queue_push => osThreadFlagsSet => osRtxPostProcess => osRtxErrorNotify => ___handle_error => ampli_error => __handle_error => ampli_error (Cycle)
#define FLASH_LED_DRIVER_TASK_STACK_SIZE                                 (SYSTEM_ARCHITECTURE_STACK_USAGE + 576)

// gui_task => __handle_error => ampli_error (Cycle)
#define GUI_TASK_STACK_SIZE                                              (SYSTEM_ARCHITECTURE_STACK_USAGE + 320)

// inputs_task => __handle_error => ampli_error (Cycle)
#define INPUTS_TASK_STACK_SIZE                                           (SYSTEM_ARCHITECTURE_STACK_USAGE + 320)

// ird_net_slave_task => receive_command => _trace_log_append => log_append => queue_push => osThreadFlagsSet => osRtxPostProcess => osRtxErrorNotify => ___handle_error => ampli_error => __handle_error => ampli_error (Cycle)
#define IRD_NET_SLAVE_TASK_STACK_SIZE                                    (SYSTEM_ARCHITECTURE_STACK_USAGE + 640)

// kernel_task => application_init => parameters_module_init => set_parameters_to_default => ext_flash_read => __handle_error => ampli_error (Cycle)
#define KERNEL_TASK_STACK_SIZE                                           (SYSTEM_ARCHITECTURE_STACK_USAGE + 832)

// leds_bicolor_task => __handle_error => ampli_error (Cycle)
#define LEDS_BICOLOR_TASK_STACK_SIZE                                     (SYSTEM_ARCHITECTURE_STACK_USAGE + 384)

// leds_task => __handle_error => ampli_error (Cycle)
#define LEDS_TASK_STACK_SIZE                                             (SYSTEM_ARCHITECTURE_STACK_USAGE + 384)

// log_task => ext_flash_program => write_disable => send_byte
#define LOG_TASK_STACK_SIZE                                              (SYSTEM_ARCHITECTURE_STACK_USAGE + 512)

// rd_net_485_bus_task => rd_net_on_line_event => user_eq_set => user_eq_helpers_initialize => user_eq_helpers_set_switch_high_pass_filter => dsp_sigma_studio_filter => __hardfp_pow => __aeabi_dmul => _double_epilogue => _double_round
#define RD_NET_485_BUS_TASK_STACK_SIZE                                   (SYSTEM_ARCHITECTURE_STACK_USAGE + 1280)

// rd_net_log_event_task => generate_log => queue_push => osThreadFlagsSet => osRtxPostProcess => osRtxErrorNotify => ___handle_error => ampli_error => __handle_error => ampli_error (Cycle)
#define RD_NET_LOG_EVENT_TASK_STACK_SIZE                                 (SYSTEM_ARCHITECTURE_STACK_USAGE + 448)

// rd_net_task => send_response => _trace_log_append => log_append => queue_push => osThreadFlagsSet => osRtxPostProcess => osRtxErrorNotify => ___handle_error => ampli_error => __handle_error => ampli_error (Cycle)
#define RD_NET_TASK_STACK_SIZE                                           (SYSTEM_ARCHITECTURE_STACK_USAGE + 768)

// serial_bridge_task => rx_data => sc16is7xx_clear_rx_fifo => write_single_register => i2c_device_memory_write => _trace_log_append => log_append => queue_push => osThreadFlagsSet => osRtxPostProcess => osRtxErrorNotify => ___handle_error => ampli_error => __handle_error => ampli_error (Cycle)
#define SERIAL_BRIDGE_TASK_STACK_SIZE                                    (SYSTEM_ARCHITECTURE_STACK_USAGE + 640)

// speaker_test_task => running_test => ext_adc_set_line => pcm1862_write_data => i2c_device_memory_write => _trace_log_append => log_append => queue_push => osThreadFlagsSet => osRtxPostProcess => osRtxErrorNotify => ___handle_error => ampli_error => __handle_error => ampli_error (Cycle)
#define SPEAKER_TEST_TASK_STACK_SIZE                                     (SYSTEM_ARCHITECTURE_STACK_USAGE + 704)

// system_manager_main_task => initialize => user_eq_initialize => user_eq_set => user_eq_helpers_initialize => user_eq_helpers_set_switch_high_pass_filter => dsp_sigma_studio_filter => __hardfp_pow => __aeabi_dmul => _double_epilogue => _double_round
#define SYSTEM_MANAGER_MAIN_TASK_STACK_SIZE                              (SYSTEM_ARCHITECTURE_STACK_USAGE + 1280)

// system_manager_periodic_task => ampli_mute_status_manager => user_eq_get => user_eq_helpers_get => flash_disk_read_field => __handle_error => ampli_error (Cycle)
#define SYSTEM_MANAGER_PERIODIC_TASK_STACK_SIZE                          (SYSTEM_ARCHITECTURE_STACK_USAGE + 768)

// temperature_limiter_task => ntc_read => adc12_read => __handle_error => ampli_error (Cycle)
#define TEMPERATURE_LIMITER_TASK_STACK_SIZE                              (SYSTEM_ARCHITECTURE_STACK_USAGE + 384)

// usb_app_task => terminal_session => execute => parameter => write_parameter_by_field => __hardfp_atof
#define USB_APP_TASK_STACK_SIZE                                          (SYSTEM_ARCHITECTURE_STACK_USAGE + 1280)

// user_eq_task => user_eq_command_manager => load_eq => user_eq_helpers_initialize => user_eq_helpers_set_switch_high_pass_filter => dsp_sigma_studio_filter => __hardfp_pow => __aeabi_dmul => _double_epilogue => _double_round
#define USER_EQ_TASK_STACK_SIZE                                          (SYSTEM_ARCHITECTURE_STACK_USAGE + 1408)

// CALL CHAIN NOT AVAILABLE
#define FLASH_ARCHIVE_SET_FLASH_DISK_TASK_ID_STACK_SIZE                  (SYSTEM_ARCHITECTURE_STACK_USAGE + 320)

#endif
